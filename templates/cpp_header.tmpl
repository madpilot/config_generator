#ifndef Config_h
#define Config_h

#define config_result             uint8_t
#define E_CONFIG_OK               0
#define E_CONFIG_FS_ACCESS        1
#define E_CONFIG_FILE_NOT_FOUND   2
#define E_CONFIG_FILE_OPEN        3
#define E_CONFIG_PARSE_ERROR      4
#define E_CONFIG_OUT_OF_MEMORY    5
#define E_CONFIG_UNKNOWN_VERSION  6
#define E_CONFIG_CORRUPT          7

#include <FS.h>

class Config {
  public:
    Config();

    // Getters
    {{ range $key, $value := .Fields -}}
    {{ getter $key $value }}
    {{ end }}

    // Setters
    {{ range $key, $value := .Fields -}}
    {{ setter $key $value }}
    {{ end }}

    config_result write();
    config_result read();

    int serialize(unsigned char *buffer);
    config_result deserialize(unsigned char *buffer, int length);
    int estimateSerializeBufferLength();

  private:
    {{ range $key, $value := .Fields -}}
    {{ type $key $value }}
    {{ end }}

    bool allocString(char **dest, const char *val);
    config_result deserializeString(unsigned char *buffer, int bufferlen, char **string, int *offset);

    void serializeString(unsigned char *buffer, char *string, int *offset);
};



#endif
